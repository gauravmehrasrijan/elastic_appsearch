<?php

/**
 * @file
 * Contains elastic_appsearch.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\elastic_appsearch\Entity\Server;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;

/*
 * Load all theme functions.
 */
require_once __DIR__ . '/elastic_appsearch.theme.inc';

/**
 * Implements hook_help().
 */
function elastic_appsearch_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the elastic_appsearch module.
    case 'help.page.elastic_appsearch':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Drupal module to interact with elastic app search.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function elastic_appsearch_theme() {
  return [
    'elastic_appsearch_admin_fields_table' => [
      'render element' => 'element',
    ],
    'engine' => [
      'variables' => [
        'data' => NULL,
        'engine' => NULL,
        'server_count' => NULL,
        'server_count_error' => NULL,
        'index_process' => NULL,
        'description' => NULL,
        'table' => NULL,
        'form' => NULL
      ],
    ],
    'server' => [
      'variables' => [
        'data' => NULL,
        'server' => NULL,
        'engines' => NULL,
        'description' => NULL,
        'table' => NULL,
        'form' => NULL
      ],
    ],
    'searchui_block' => [
      'variables' => [
        'content' => NULL,
        'engine' => NULL,
        'fields' => NULL
      ],
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_node_update().
 */
function elastic_appsearch_node_insert($node) {
  \Drupal::service('elastic_appsearch.entity.tracking_manager')->trackerInsertNode($node);
}

/**
 * Implements hook_node_update().
 */
function elastic_appsearch_node_update($node) {

  if ($node->original->status->getString() === "1" && $node->status->getString() !== "1") {
    \Drupal::service('elastic_appsearch.entity.tracking_manager')->trackerDeleteNode($node);
  }
  
  if($node->status->getString() === "1"){
    \Drupal::service('elastic_appsearch.entity.tracking_manager')->trackerUpdateNode($node);
  }
}

/**
 * Implements hook_node_delete().
 */
function elastic_appsearch_node_delete($node) {
  \Drupal::service('elastic_appsearch.entity.tracking_manager')->trackerDeleteNode($node);
}
